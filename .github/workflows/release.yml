name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  packages: write
  id-token: write  # for keyless signing if enabled

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Extract version
        id: meta
        run: |
          TAG=${GITHUB_REF##*/}
          VERSION=${TAG#v}
          MAJOR=${VERSION%%.*}
          MINOR=${VERSION%.*}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "major=$MAJOR" >> $GITHUB_OUTPUT
          echo "minor=$MINOR" >> $GITHUB_OUTPUT
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      - name: Build wheels
        run: |
          python -m pip install --upgrade pip
          python -m pip install build
          python -m build
      - name: Build container
        run: |
          IMAGE=ghcr.io/${{ github.repository }}
          VERSION=${{ steps.meta.outputs.version }}
            docker build -t $IMAGE:$VERSION .
          # Additional mutable tags
          docker tag $IMAGE:$VERSION $IMAGE:${{ steps.meta.outputs.minor }}
          docker tag $IMAGE:$VERSION $IMAGE:${{ steps.meta.outputs.major }}
          docker tag $IMAGE:$VERSION $IMAGE:latest
      - name: Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push images
        run: |
          IMAGE=ghcr.io/${{ github.repository }}
          for TAG in ${{ steps.meta.outputs.version }} ${{ steps.meta.outputs.minor }} ${{ steps.meta.outputs.major }} latest; do
            docker push $IMAGE:$TAG
          done
          DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' $IMAGE:${{ steps.meta.outputs.version }})
          echo "digest=$DIGEST" >> $GITHUB_OUTPUT
      - name: Cosign install
        uses: sigstore/cosign-installer@v3
      - name: Cosign sign (keyless)
        env:
          COSIGN_EXPERIMENTAL: 1
        run: |
          IMAGE=ghcr.io/${{ github.repository }}
          for TAG in ${{ steps.meta.outputs.version }} ${{ steps.meta.outputs.minor }} ${{ steps.meta.outputs.major }} latest; do
            cosign sign --yes $IMAGE:$TAG
          done
      - name: Cosign attest (provenance)
        env:
          COSIGN_EXPERIMENTAL: 1
        run: |
          IMAGE=ghcr.io/${{ github.repository }}
          cosign attest --yes --predicate <(echo '{"buildType":"github-actions","repo":"${{ github.repository }}","ref":"${GITHUB_REF}"}') --type slsaprovenance $IMAGE:${{ steps.meta.outputs.version }}
      - name: Generate SBOM
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin
          syft ghcr.io/${{ github.repository }}:${{ steps.meta.outputs.version }} -o spdx-json > SBOM.spdx.json
      - name: Upload SBOM artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: SBOM.spdx.json
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.meta.outputs.version }}
          name: v${{ steps.meta.outputs.version }}
          body: |
            See CHANGELOG.md for details.
            Image Digest: ${{ steps.meta.outputs.digest }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
